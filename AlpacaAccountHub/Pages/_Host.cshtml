@page "/"
@namespace AlpacaAccountHub.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Day Trading Hub</title>
    <base href="~/" />
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
    <link href="css/site.css" rel="stylesheet" />
    <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

    <script language="javascript">

        function hiddenValue(showed) {
            document.getElementById("searchSymbolValue").value = showed.value;
        }

        function CallSearchSymbol() {
            var searchedTicker = document.getElementById("searchSymbolValue").value;
            console.log(searchedTicker);
            DotNet.invokeMethodAsync('AlpacaAccountHub', 'SearchSymbol', searchedTicker);
        }

        $("#buySell").click(function() {
            var fired_button = $(this).value();
            window.alert(fired_button);
            DotNet.invokeMethodAsync('AlpacaAccountHub', 'BuySell', fired_button);
        });

        $('input').click(function(e) {
            if (e.ctrlKey) {
                $(this).prop('checked', false);
            }
        });

        function DisplayChart() {
            //get the value of the symbol input box
            var searchedTicker = document.getElementById("symbol").value;
            console.log(searchedTicker);

            // get the id of the div on the orders.razor
            var parentDiv = document.getElementById('displayChart');

            //get the id of the anchor tag to create a link to tradingview
            var chartLink = document.getElementById('chartLink');
            chartLink.href = `https://www.tradingview.com/symbols/${searchedTicker}`;
            //var symbolLink = `${searchedTicker.toUpperCase} Chart`;
            //var linkText = document.createTextNode(symbolLink);
            //chartLink.appendChild(linkText);

            //append the StockChart div to the parent div in the order.razor component
            var stockChart = document.getElementById('StockChart');
            parentDiv.appendChild(stockChart);
            parentDiv.style.display = "block";
            DotNet.invokeMethodAsync('AlpacaAccountHub', 'SearchSymbol', searchedTicker);

            //create the new stock chart using the ticker from the order component 
            new TradingView.widget(
                {
                    "width": 980,
                    "height": 610,
                    "symbol": `${searchedTicker}`,
                    "interval": "D",
                    "timezone": "Etc/UTC",
                    "theme": "dark",
                    "style": "1",
                    "locale": "en",
                    "toolbar_bg": "#f1f3f6",
                    "enable_publishing": false,
                    "allow_symbol_change": true,
                    "container_id": "tradingview_893ad"
                }
            );
        }
    </script>

</head>

<body>
<app>
    <component type="typeof(App)" render-mode="ServerPrerendered" />
</app>
<div class="tradingview-widget-container"  id="StockChart">
    <div id="tradingview_893ad"></div>
    <div class="tradingview-widget-copyright"><a  rel="noopener" target="_blank" id="chartLink"><span style="color: blue">Chart</span></a> by TradingView</div>
    <script type="text/javascript" src="https://s3.tradingview.com/tv.js"></script>
    <script type="text/javascript">
       
    </script>
</div>

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    <script src="_framework/blazor.server.js"></script>
</body>
</html>

@page "/order"
@using AlpacaAccountHub.AlpacaRequests
@using AlpacaAccountHub.Data
@using AlpacaAccountHub.Data.AlpacaAccount
@using AlpacaAccountHub.Data.SymbolData
@using AlpacaAccountHub.PolygonRequests


@attribute [Authorize]
@inject PlaceOrder Buy
@inject AlpacaAccountInfo AccountInfo
@inject Snapshot SingleTicker

@inject IJSRuntime JsRuntime



<h1>Order Hub</h1>


@if (accountInfo == null)
{
    <p><em>Loading...</em></p>
}
else
{
    @if (accountInfo.numberOfDayTrades == 3 )
    {
        <h2 style="color:red;">Cannot make day trades today (@accountInfo.today)</h2>
    }
    else
    {
        <form id="searchTicker"></form>
        <form id="submitOrder"></form>
        <div class="orderContainer">
            <div class="buySellContainer">

                <div class="symbolFlex">
                    <label for="symbol">Symbol:</label>
                    <input type="text" id="symbol" size="5" style="text-transform:uppercase" @bind-value="order.symbol">

                    <input type="hidden" id="searchSymbolValue" form="searchTicker" style="text-transform:uppercase">
                    <button type="submit" id="searchSymbolButton" form="searchTicker" value="Search" name="searchSymbol" @onclick="SearchSymbol">Search</button>
                </div>

                <div class="sideFlex">
                    <button class="buyButton" id="buySell" value="buy"  >Buy</button>
                    <div class="divider"><p>&#8592; Side &#8594;</p></div>
                    <button class="sellButton" id="buySell" value="sell" >SELL</button>
                </div>

                <div class="limitPrice">
                    <label for="limitPrice">Limit Price:</label>
                    <input id="limitPrice" type="text" size="5" @bind-value="order.limitPrice">
                </div>

                <div class="quantity">
                    <label for="quantity"># Shares:</label>
                    <input type="text" list="quantity" size="6" @bind-value="order.quantity" />
                    <datalist id="quantity" form="submitOrder">
                        <option value="50">50</option>
                        <option value="75">75</option>
                        <option value="100">100</option>
                        <option value="125">125</option>
                        <option value="150">150</option>
                        <option value="175">175</option>
                        <option value="200">200</option>
                        <option value="225">225</option>
                        <option value="250">250</option>
                    </datalist>

                </div>

                <div class="type">
                    <label for="type">Order Type:</label>
                    <select id="type" form="submitOrder" @bind="order.type">
                        <option value="limit">Limit</option>
                        <option value="market">Market</option>
                        <option value="stopLimit">Stop Limit</option>
                    </select>
                </div>

                <div class="timeInForce">
                    <label for="timeInForce">Time in Force:</label>
                    <select id="timeInForce" form="submitOrder" @bind="order.type" >
                        <option value="gtc" >GTC</option>
                        <option value="fok">Fill/Kill</option>
                        <option value="day">Day</option>
                    </select>
                </div>
                <!--
                <div>
                    <label for="stopPrice">Stop Price</label>
                    <input id="stopPrice" type="text">
                </div>
                -->
                <div>
                    <input id="submitOrderButton" type="submit" name="submitOrder" form="submitOrder" value="Submit Order" class="submitOrder" @onclick="PlaceOrder">
                </div>
            </div>


            <div class="searchedSymbolContainer" id="lastTrade">
                @if (@searchedSymbol.previousDayClose == 0)
                {
                    <p style="align-content: center"><strong>Search for a stock to display information</strong></p>
                }
                else
                {
                    <table class="table-fill">
                        <colgroup span="2"></colgroup>
                        <thead>
                            <tr>
                                <th style="align-content:center">@searchedSymbol.ticker </th>
                                @if (@searchedSymbol.tradable == "true")
                                {
                                    <th style="align-content:center">Tradable</th>
                                }
                                else
                                {
                                    <th style="align-content:center">NOT Tradable</th>
                                }

                            </tr>
                        </thead>
                        <tbody class="table-hover">
                            <tr>
                                <td class="text-left">Previous Day Close:</td>
                                <td class="text-left">@searchedSymbol.previousDayClose</td>
                            </tr>
                            <tr>
                                <td class="text-left">Last Minute Close:</td>
                                <td class="text-left">@searchedSymbol.minuteClose</td>
                            </tr>
                            <tr>
                                <td class="text-left">$ Change:</td>
                                <td class="text-left">@searchedSymbol.todaysChange</td>
                            </tr>
                            <tr>
                                <td class="text-left">% Change:</td>
                                <td class="text-left">@searchedSymbol.todaysChangePerc</td>
                            </tr>
                            <tr>
                                <td class="text-left">Previous Day Volume:</td>
                                <td class="text-left">@searchedSymbol.previousDayVolume</td>
                            </tr>
                        </tbody>
                    </table>
                }
            </div>
        </div>


    }
}

@code {

    private AlpacaAccountData accountInfo;
    private static OrdersData order = new OrdersData();
    public static TickerDetails searchedSymbol = new TickerDetails();

    public string lookupSymbol { get; set; } = "";

    protected override async Task OnInitializedAsync()
    {
        accountInfo = await AccountInfo.AccountInfo();
        StateHasChanged();
    }

    public void SearchSymbol()
    {
        lookupSymbol = order.symbol;
        Snapshot single = new Snapshot();
        searchedSymbol = single.SingleTicker(lookupSymbol);
        StateHasChanged();
    }

    public void PlaceOrder()
    {
        Buy.Buy(order);
    }

    [JSInvokable]
    public static void BuySell(string side)
    {
         order.side = side;
    }




}